#ifndef DEFS_H
#define DEFS_H

const float EPSILON = 1e-5;
#define PI glm::pi<float>()
#define IN_RANGE(a,b)   (((a>(b-EPSILON))&&(a<(b+EPSILON)))?1:0)
#define TO_RADIANS(a)   (a*PI/180.0f)
#define TO_VEC3(v)		vec3df(v.x, v.y, v.z)
#define ARENA_SIZE 2.75f
#define HEIGHT 0.0
#define PLYSIZE 0.35f
#define NEAR_PLANE 0.01f
#define FAR_PLANE 20.0f

enum shaderType { SPRITE_LOADING, GOOP, JAD, FIREBALL,  ARENA, HEALTHPOT, MANAPOT, SPRITE_UNTEXTURED, SPRITE_DEATH, SPRITE_MAIN, BUTTON_START,
					BUTTON_OPTIONS, BUTTON_QUIT, BUTTON_CONTROLS, BUTTON_RESTART, BUTTON_MAIN, BUTTON_QUIT2, SPRITE_PAUSE, SPRITE_CONTROLS, SPRITE_OPTIONS, BUTTON_RESUME, 
						BUTTON_MAIN2, BUTTON_OPTIONS2, BUTTON_QUIT3, BUTTON_CONTROLS2, BUTTON_FULLSCREEN, BUTTON_PLUS, BUTTON_MINUS, SKYBOX};

enum groundType { FOREGROUND, BACKGROUND };
enum GameState { MAIN_MENU, LOADING, PLAYING, PAUSE, OPTIONS, CONTROLS, DEAD };
enum optionType { MASTER_VOL, MUSIC_VOL, MISC_VOL, SENSITIVITY, NONE};

#endif

